/**
 * Copyright (c) 2000-2014 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

##n

${esc.h}import "${className}.h"

##n

/**
 * @author Bruno Farache
 */

#set ($actions = $discovery.actions)
#set ($context = $discovery.context)

@implementation $className

##n

#foreach ($action in $actions)
	#set ($parameters = $action.parameters)

	#objectiveCMethodSignature($action " {")

	#set ($comparatorParam = $languageUtil.getComparatorParam($parameters))
	#if ("$!comparatorParam" != "")
		#set ($comparatorVariable = $languageUtil.getParamName($comparatorParam.name, $comparatorParam.type))

		##t	NSString *comparatorPrefix = @"-";
		##t	NSString *comparatorValue = @"";
		##n
		##t	if ([$comparatorVariable hasPrefix:@"com.liferay"]) {
		##t		comparatorPrefix = @"%2B";
		##t		comparatorValue = $comparatorVariable;
		##t	}
		##n
		##t	NSString *comparatorKey = [NSString stringWithFormat:@"%@$comparatorParam.name", comparatorPrefix];
		##n
	#end

	##t	NSDictionary *_params = @{

	#foreach ($param in $parameters)
		#set ($paramName = $languageUtil.getParamName($param.name, $param.type))
		#set ($paramValue = $languageUtil.getParamValue($paramName, $param.type))

		#if ($paramValue == $comparatorVariable)
			#set ($line = "comparatorKey: comparatorValue")
		#else
			#set ($line = "@${esc.q}$param.name${esc.q}: $paramValue")
		#end

		#if ($foreach.hasNext)
			#set ($line = "$line,")
		#end

		##t		$line
	#end

	##t	};

	##n

	##t	NSDictionary *_command = @{@${esc.q}$context$action.path${esc.q}: _params};

	##n

	#if ($returnType == "void")
		##t	[self.session invoke:_command error:error];
	#elseif ($returnType == "BOOL")
		##t	return [self boolValue:(NSNumber *)[self.session invoke:_command error:error]];
	#else
		##t	return ($returnType)[self.session invoke:_command error:error];
	#end

	}

	##n

	#set ($comparatorParam = "")
#end

@end